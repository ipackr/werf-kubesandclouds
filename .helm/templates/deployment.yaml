apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}-deployment
  labels:
    app: {{ .Values.appname }}
spec:
  # We want three replicas to be up!
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
    spec:
      containers:
      - name: {{ .Values.appname }}
{{ tuple "web-server" . | werf_container_image | indent 8 }}
        #image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        # Generates a customized main page and executes the container's original entrypoint
        command: ["/bin/sh","-c"]
        args: ["/home/script/index.sh; /entrypoint.sh /run.sh"]
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        env:
{{ tuple "web-server" . | werf_container_env | indent 8 }}
            # Environment Variable which stores the value from the cm
            - name: ENV_VAR
              valueFrom:
                configMapKeyRef:
                  # ConfigMap Name
                  name: {{ .Release.Name }}-cm
                  # Key for the desired value
                  key: env
            - name: SECRET_STRING
              valueFrom:
                secretKeyRef:
                  name: my-encrypted-secret
                  key: secret_string
        ports:
        - containerPort: 8080

        volumeMounts:
          - name: script
            mountPath: "/home/script"
            readOnly: true
  
        volumes:
        - name: script
          configMap:
            name: {{ .Release.Name }}-cm-scripts
            defaultMode: 0755

        


